/* HTML Generator for the Twitch Filtered Chat */"use strict";/* TODO:
 * Implement raid and calling code
 * Implement TwitchSubEvent htmlgen
 * Add clip formatting code (this._config.ShowClips)
 * Implement "light" and "dark" colorschemes
 * Add emote information on hover
 * Add badge information on hover
 *//* exported HTMLGenerator */var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a}finally{try{!d&&h["return"]&&h["return"]()}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var HTMLGenerator=function(){function a(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;_classCallCheck(this,a),this._client=b,this._config=c||{},this._default_colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],this._user_colors={},this._bg_colors=["#1d1d1d","#0a0a0a","#d1d1d1"],this._config.Layout||(this._config.Layout={}),this._config.ShowClips||(this._config.ShowClips=!1)}return _createClass(a,[{key:"setValue",value:function c(a,b){this._config[a]=b}},{key:"getValue",value:function b(a){return this._config[a]}},{key:"getColorFor",value:function e(a){var b=""+a;if("string"!=typeof a&&Util.Error("Expected string, got "+("undefined"==typeof a?"undefined":_typeof(a))+": "+JSON.stringify(a)),!this._user_colors.hasOwnProperty(b)){for(var c=0,d=0;d<b.length;++d)c=(c<<5)-c+b.charCodeAt(d);/* Taken from Twitch vendor javascript */c%=this._default_colors.length,0>c&&(c+=this._default_colors.length),this._user_colors[b]=this._default_colors[c]}return this._user_colors[b]}},{key:"genName",value:function e(a,b){var c=$("<span class=\"username\"></span>");b?c.css("color",b):this.getColorFor(a)?c.css("color",this.getColorFor(a)):c.css("color","#ffffff");/* Determine the best border color to use */var d=Util.GetMaxContrast(c.css("color"),this._bg_colors);return c.css("text-shadow","-0.8px -0.8px 0 "+d+",\n                            0.8px -0.8px 0 "+d+",\n                           -0.8px  0.8px 0 "+d+",\n                            0.8px  0.8px 0 "+d),c.attr("data-username","1"),c.text(a),c[0].outerHTML}},{key:"formatURLs",value:function J(a){/* SplitByMatches map function */var b=$("<span></span>").html(a),c=function(a){return new URL(Util.URL(a))},d=Util.SearchTree(b[0],/* SearchTree predicate */function(a){return!!(a.nodeType===Node.TEXT_NODE&&a.nodeValue.match(Util.URL_REGEX))}),e=[],f=!0,g=!1,h=void 0;/* Obtain text nodes with URLs *//* Populate nodes and their new contents */try{for(var i,j=d[Symbol.iterator]();!(f=(i=j.next()).done);f=!0){var k=i.value,l=k.nodeValue.match(Util.URL_REGEX),m=Util.SplitByMatches(k.nodeValue,l,c),n=[],o=!0,p=!1,q=void 0;try{for(var r,s,t=m[Symbol.iterator]();!(o=(r=t.next()).done);o=!0)s=r.value,n.push(Util.CreateNode(s))}catch(a){p=!0,q=a}finally{try{!o&&t.return&&t.return()}finally{if(p)throw q}}e.push([k.parentNode,n])}/* Replace the nodes' contents with the new children */}catch(a){g=!0,h=a}finally{try{!f&&j.return&&j.return()}finally{if(g)throw h}}var u=!0,v=!1,w=void 0;try{for(var x,y=e[Symbol.iterator]();!(u=(x=y.next()).done);u=!0){var z=x.value,A=_slicedToArray(z,2),B=A[0],C=A[1];B.innerHTML="";var D=!0,E=!1,F=void 0;try{for(var G,H,I=C[Symbol.iterator]();!(D=(G=I.next()).done);D=!0)H=G.value,B.innerHTML+=Util.GetHTML(H)}catch(a){E=!0,F=a}finally{try{!D&&I.return&&I.return()}finally{if(E)throw F}}}}catch(a){v=!0,w=a}finally{try{!u&&y.return&&y.return()}finally{if(v)throw w}}return b[0].innerHTML}},{key:"_checkUndefined",value:function c(a,b){-1<b[0].outerHTML.indexOf("undefined")&&(Util.Error("msg contains undefined"),Util.ErrorOnly(a,b,b[0].outerHTML))}},{key:"_remap",value:function h(a,b,c,d){for(var e=a[b],f=a[c],g=b;g<a.length;++g)a[g]-a[b]>=f-e&&(a[g]+=d-(f-e));/* IDEA BEHIND MAP ADJUSTMENT:
     * 1) Maintain two parallel strings, `msg0` (original) and `msg` (final).
     * 2) Maintain the following invariant:
     *  a) msg0.indexOf("substr") === map[msg.indexOf("substr")]
     *  b) msg0[idx] === msg1[map[idx]]
     * Exceptions:
     *  If msg0[idx] is part of a formatted entity; msg[map[idx]] may not be
     *  the same character.
     * Usage:
     *  The map allows for formatting the final message based on where items
     *  appear in the original message.
     */}},{key:"_twitchEmote",value:function b(a){/* Usage: _twitchEmote({id: "Kappa", name: "Kappa"}) */if(null!==a.id){var c=$("<img class=\"emote twitch-emote\" />");c.attr("tw-emote-src","twitch"),c.attr("tw-emote-id",a.id),c.attr("src",this._client.GetEmote(a.id)),a.name&&(c.attr("alt",a.name),c.attr("title",a.name));var d=c[0].outerHTML;return a.final_length=d.length,d}return null}},{key:"_addonEmote",value:function h(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null,e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:null,f=a.replace(/[^a-z0-9_]/g,""),g=$("<img class=\"emote\">");return g.addClass(f+"-emote"),g.attr(f+"-emote-id",c),g.attr("src",b),null!==d&&g.attr("width",d),null!==e&&g.attr("height",e),g[0].outerHTML}},{key:"_genCheer",value:function g(a,b){/* Use the highest tier image that doesn't exceed the cheered bits */var c=a.tiers.filter(function(a){return b>=a.min_bits}).max(function(a){return a.min_bits}),d=c.images.dark.animated[a.scales.min(function(a){return+a})],e=$("<span class=\"cheer cheermote\"></span>");/* Use the smallest scale available */e.css("color",c.color);var f=$("<img class=\"cheer-image\" />");return f.attr("alt",a.prefix).attr("title",a.prefix),f.attr("src",d),e.append(f),e.append(b),e[0].outerHTML}},{key:"_genTwitchBadge",value:function g(a,b,c){var d=$("<img class=\"badge\" width=\"18px\" height=\"18px\" />");if(d.attr("tw-badge-cause",JSON.stringify([b,c])),d.attr("data-badge","1"),d.attr("data-badge-name",b),d.attr("data-badge-num",c),d.attr("title",b+"/"+c),d.attr("alt",b+"/"+c),this._client.IsGlobalBadge(b,c)){var h=this._client.GetGlobalBadge(b,c);d.attr("src",h.image_url_1x),d.attr("tw-badge-scope","global")}else if(this._client.IsChannelBadge(a.channel,b)){var e=this._client.GetChannelBadge(a.channel,b),f=e.alpha||e.image;d.attr("src",f),d.attr("tw-badge",JSON.stringify(e)),a.channel&&(d.attr("tw-badge-scope","channel"),d.attr("tw-badge-channel",a.channel.channel.replace(/^#/,"")))}else return null;return d}},{key:"_genBadges",value:function u(a){var b=$("<span class=\"badges\" data-badges=\"1\"></span>");b.addClass("badges");var c=0;/* Add Twitch-native badges */if(a.flags.badges&&(c+=18*a.flags.badges.length),a.flags["ffz-badges"]&&(c+=18*a.flags["ffz-badges"].length),a.flags["bttv-badges"]&&(c+=18*a.flags["bttv-badges"].length),b.css("overflow","hidden"),b.css("width",c+"px"),b.css("max-width",c+"px"),a.flags.badges){var d=!0,e=!1,f=void 0;try{for(var g,h=a.flags.badges[Symbol.iterator]();!(d=(g=h.next()).done);d=!0){var i=g.value,j=_slicedToArray(i,2),k=j[0],l=j[1],m=this._genTwitchBadge(a,k,l);if(null===m){Util.Warn("Unknown badge",k,l,"for",a);continue}else b.append(m)}}catch(a){e=!0,f=a}finally{try{!d&&h.return&&h.return()}finally{if(e)throw f}}}/* Add FFZ badges */if(a.flags["ffz-badges"]){var n=!0,o=!1,p=void 0;try{for(var q,r=Object.values(a.flags["ffz-badges"])[Symbol.iterator]();!(n=(q=r.next()).done);n=!0){var s=q.value,t=$("<img class=\"badge ffz-badge\" width=\"18px\" height=\"18px\" />");t.attr("data-badge","1"),t.attr("data-ffz-badge","1"),t.attr("tw-badge-scope","ffz"),t.attr("src",Util.URL(s.image)),t.attr("alt",s.name),t.attr("title",s.title),b.append(t)}}catch(a){o=!0,p=a}finally{try{!n&&r.return&&r.return()}finally{if(o)throw p}}}/* For if BTTV ever adds badges
    if (event.flags['bttv-badges']) {
      for (let badge of Object.values(event.flags['bttv-badges'])) {
        let $b = $(`<img class="badge bttv-badge" width="18px" height="18px" />`);
        $b.attr('data-badge', '1');
        $b.attr('data-ffz-badge', '1');
        $b.attr('tw-badge-scope', 'ffz');
      }
    } */return b}},{key:"_genName",value:function d(a){/* Display upper-case name, assign color to lower-case name */var b=a.name||a.user,c=a.flags.color||this.getColorFor(a.user);return c||(c="#ffffff"),this.genName(b,c)}},{key:"_msgCheersTransform",value:function m(a,b,c,d,e){if(a.flags.bits&&0<a.flags.bits){var f=a.flags.bits,g=this._client.FindCheers(a.channel,a.message);/* Sort the cheer matches from right-to-left */for(g.sort(function(c,a){return c.start-a.start});0<g.length;){var h=g.pop(),i=[c[h.start],c[h.end]],j=i[0],k=i[1],l=this._genCheer(h.cheer,h.bits);b=b.substr(0,j)+l+b.substr(k),this._remap(c,h.start,h.end,l.length);/* Scan for cheer effects */var n=j+l.length;for(j=n,k=n;n<b.length;){var o="";if(b[n].match(/\s/))n+=1;else{k=b.substr(n).search(/\s/),k=-1===k?b.length:n+k,o=b.substring(n,k);var p=GetCheerStyle(o.toLowerCase());/* Stop scanning at the first non-effect word */if(!p){k=n;break}else!p._disabled&&f>=p.cost&&(/* Don't stop scanning for disabled effects, or if the effect
               * uses more bits than are left */e.push(p),f-=p.cost);n=k}}j!==k&&(b=b.substr(0,j)+" "+b.substr(k),this._remap(c,j,k,0))}}return b}},{key:"_msgEmotesTransform",value:function h(a,b,c){if(a.flags.emotes){var i=a.flags.emotes.map(function(a){return{id:a.id,name:a.name,start:c[a.start],end:c[a.end],ostart:a.start,oend:a.end}});for(i.sort(function(c,a){return c.start-a.start});0<i.length;){var d=i.pop(),e=b.substr(0,d.start),f=b.substr(d.end+1),g=this._twitchEmote(d);b=""+e+g+f;/* Adjust the map */for(var j=d.ostart;j<c.length;++j)c[j]>=d.end&&(c[j]+=d.final_length-(d.end-d.start)-1)}}return b}},{key:"_msgFFZEmotesTransform",value:function u(a,b,c){var d=this._client.GetFFZEmotes(a.channel);if(d&&d.emotes){var e=[],f=!0,g=!1,h=void 0;try{for(var i,j=Object.entries(d.emotes)[Symbol.iterator]();!(f=(i=j.next()).done);f=!0){var l=i.value,m=_slicedToArray(l,2),n=m[0],k=m[1];e.push([k,n])}}catch(a){g=!0,h=a}finally{try{!f&&j.return&&j.return()}finally{if(g)throw h}}var v=Twitch.ScanEmotes(a.message,e);for(v.sort(function(c,a){return c.start-a.start});0<v.length;){var o=v.pop(),p=o.id,q=p.urls[Object.keys(p.urls).min()],r=this._addonEmote("ffz",q,p.id,p.width,p.height),s=b.substr(0,c[o.start]),t=b.substr(c[o.end+1]);b=""+s+r+t,this._remap(c,o.start,o.end+1,r.length)}}return b}},{key:"_msgBTTVEmotesTransform",value:function L(a,b,c){var d=this._client.GetGlobalBTTVEmotes(),e=this._client.GetBTTVEmotes(a.channel),f={},g=!0,h=!1,i=void 0;try{for(var j,l=Object.entries(d)[Symbol.iterator]();!(g=(j=l.next()).done);g=!0){var m=j.value,n=_slicedToArray(m,2),o=n[0],k=n[1];f[o]=k}/* Channel emotes override global emotes */}catch(a){h=!0,i=a}finally{try{!g&&l.return&&l.return()}finally{if(h)throw i}}var p=!0,q=!1,r=void 0;try{for(var s,t=Object.entries(e)[Symbol.iterator]();!(p=(s=t.next()).done);p=!0){var u=s.value,v=_slicedToArray(u,2),w=v[0],x=v[1];f[w]=x}}catch(a){q=!0,r=a}finally{try{!p&&t.return&&t.return()}finally{if(q)throw r}}var y=[],z=!0,A=!1,B=void 0;try{for(var C,D,E=Object.keys(f)[Symbol.iterator]();!(z=(C=E.next()).done);z=!0)D=C.value,y.push([D,RegExp.escape(D)])}catch(a){A=!0,B=a}finally{try{!z&&E.return&&E.return()}finally{if(A)throw B}}var F=Twitch.ScanEmotes(a.message,y);for(F.sort(function(c,a){return c.start-a.start});0<F.length;){var G=F.pop(),H=f[G.id],I=this._addonEmote("bttv",H.url,H.id),J=b.substr(0,c[G.start]),K=b.substr(c[G.end+1]);b=""+J+I+K,this._remap(c,G.start,G.end+1,I.length)}return b}},{key:"_msgAtUserTransform",value:function f(a,b,c,d){var e=/(^|\b\s*)(@\w+)(\s*\b|$)/g;return b=b.replace(e,function(a,b,c,e){return c.substr(1).toLowerCase()===this.name.toLowerCase()?(d.addClass("highlight"),b+"<em class=\"at-user at-self\">"+c+"</em>"+e):b+"<em class=\"at-user\">"+c+"</em>"+e}.bind(this)),b}},{key:"_msgURLTransform",value:function c(a,b){return this.formatURLs(b)}},{key:"_genMsgInfo",value:function j(a){var b=$("<span class=\"message\" data-message=\"1\"></span>"),c=[],d=Util.EscapeWithMap(a.message),e=_slicedToArray(d,2),f=e[0],g=e[1];/* Escape the message, keeping track of how characters move *//* Prevent off-the-end mistakes *//* Handle early mod-only antics */if(g.push(f.length),!$("#cbForce").is(":checked")&&a.ismod){var k=a.message.split(" ")[0];if("force"===k)a.flags.force=!0;else if("forcejs"===k)a.flags.force=!0;else if("forcebits"===k||"forcecheer"===k){for(var h=k.length,i="cheer1000";i.length<k.length;)i+=" ";/* Modify message and event.message, as they're both used below */a.values.message=i+a.message.substr(h),f=i+f.substr(h),a.flags.bits=1e3,a.flags.force=!0}}/* Apply message transformations */return f=this._msgEmotesTransform(a,f,g,b,c),f=this._msgCheersTransform(a,f,g,b,c),f=this._msgFFZEmotesTransform(a,f,g,b,c),f=this._msgBTTVEmotesTransform(a,f,g,b,c),f=this._msgAtUserTransform(a,f,g,b,c),f=this._msgURLTransform(a,f,g,b,c),a.ismod&&!$("#cbForce").is(":checked")&&a.flags.force&&(a.message.startsWith("force ")?f=a.message.substr(6):a.message.startsWith("forcejs ")&&(f="<script>"+a.message.substr(8)+"</script>")),b.html(f),{e:b,effects:c}}},{key:"_addChatAttrs",value:function c(a,b){a.attr("data-id",b.flags.id),a.attr("data-user",b.user),a.attr("data-user-id",b.flags["user-id"]),a.attr("data-channel",b.channel.channel.replace(/^#/,"")),b.channel.room&&a.attr("data-room",b.channel.room),b.channel.roomuid&&a.attr("data-roomuid",b.channel.roomuid),a.attr("data-channel-id",b.flags["room-id"]),b.issub&&a.attr("data-subscriber","1"),b.ismod&&a.attr("data-mod","1"),b.isvip&&a.attr("data-vip","1"),b.iscaster&&a.attr("data-caster","1"),a.attr("data-sent-ts",b.flags["tmi-sent-ts"]),a.attr("data-recv-ts",Date.now())}},{key:"_genSubWrapper",value:function c(a){var b=$("<div></div>");return b.addClass("chat-line").addClass("sub").addClass("notice"),b.append($(this._genBadges(a))),b.append($(this._genName(a))),b.html(b.html()+"&nbsp;"),b}},{key:"gen",value:function m(a){var b=$("<div class=\"chat-line\"></div>"),c=a.flags.color||this.getColorFor(a.user);this._client.IsUIDSelf(a.flags["user-id"])&&b.addClass("self"),this._addChatAttrs(b,a),this._config.Layout.Slim||(a.flags.subscriber&&b.addClass("chat-sub"),a.flags.mod&&b.addClass("chat-mod"),a.flags.vip&&b.addClass("chat-vip"),a.flags.broadcaster&&b.addClass("chat-caster")),b.append($(this._genBadges(a))),b.append($(this._genName(a)));var d=this._genMsgInfo(a);a.flags.action?d.e.css("color",c):b.html(b.html()+":"),b.html(b.html()+"&nbsp;");var e=[],f=[];if(0<d.effects.length){var g=!0,h=!1,i=void 0;try{for(var j,k,l=d.effects[Symbol.iterator]();!(g=(j=l.next()).done);g=!0)k=j.value,k.class&&d.e.addClass(k.class),k.style&&d.e.attr("style",k.style),k.wclass&&b.addClass(k.wclass),k.wstyle&&b.attr("style",k.wstyle),k.html_pre&&e.push(k.html_pre),k.html_post&&f.unshift(k.html_post)}catch(a){h=!0,i=a}finally{try{!g&&l.return&&l.return()}finally{if(h)throw i}}}return b.append($(e.join("")+d.e[0].outerHTML+f.join(""))),b[0].outerHTML}},{key:"sub",value:function e(a){var b=this._genSubWrapper(a),c=$("<span class=\"message sub-message\"></span>"),d=this._twitchEmote({id:"PogChamp"});return c.text(Strings.Sub(TwitchSubEvent.PlanName(a.plan_id))),c.html(d+"&nbsp;"+c.html()),b.append(c),this._checkUndefined(a,b),b[0].outerHTML}},{key:"resub",value:function h(a){var b=this._genSubWrapper(a),c=$("<span class=\"message sub-message\"></span>"),d=this._twitchEmote({id:"PogChamp"}),e=a.months||a.total_months,f=a.streak_months,g=TwitchSubEvent.PlanName(a.plan_id);return a.share_streak?c.text(Strings.ResubStreak(e,g,f)):c.text(Strings.Resub(e,g)),c.html(d+"&nbsp;"+c.html()),b.append(c),this._checkUndefined(a,b),b[0].outerHTML}},{key:"giftsub",value:function e(a){var b=this._genSubWrapper(a),c=$("<span class=\"message sub-message\"></span>");if(a.flags["system-msg"])c.text(a.flags["system-msg"]);else{var d=a.recipient,f=a.user,g=TwitchSubEvent.PlanName(a.plan_id);c.text(Strings.GiftSub(f,g,d))}var h=this._twitchEmote({id:"HolidayPresent"});return c.html(h+"&nbsp;"+c.html()),b.append(c),this._checkUndefined(a,b),b[0].outerHTML}},{key:"anongiftsub",value:function e(a){var b=this._genSubWrapper(a),c=$("<span class=\"message sub-message\"></span>");if(a.flags["system-msg"])c.text(a.flags["system-msg"]);else{var d=a.recipient_name||a.recipient,f=TwitchSubEvent.PlanName(a.plan_id);c.text(Strings.AnonGiftSub(f,d))}var g=this._twitchEmote({id:"HolidayPresent"});return c.html(g+"&nbsp;"+c.html()),b.append(c),this._checkUndefined(a,b),b[0].outerHTML}},{key:"raid",value:function e(a){var b=$("<div class=\"chat-line raid\"></div>");if(a.flags["system-msg"])b.text(a.flags["system-msg"]);else{/* Unlikely */var c=a.flags["msg-param-displayName"]||a.flags["msg-param-login"],d=a.flags["msg-param-viewerCount"],f=this.genName(c,a.flags.color);b.html(Strings.Raid(f,d))}var g=this._twitchEmote({id:"TombRaid"});return b.html(g+"&nbsp;"+b.html()),this._checkUndefined(a,b),b[0].outerHTML}},{key:"new_user",value:function a(){}/* TODO *//* Strings.NewUser(event.user) *//* General-use functions below */},{key:"url",value:function m(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null,b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,d=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,e=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null,f=$("<a></a>");if(null===a?f.attr("href","javascript:void(0)"):f.attr("href",a),null===b?null===a?f.val("undefined"):f.text(a):f.text(b),null!==d)if("string"==typeof d)f.addClass(d);else{var g=!0,h=!1,i=void 0;try{for(var j,k,l=d[Symbol.iterator]();!(g=(j=l.next()).done);g=!0)k=j.value,f.addClass(k)}catch(a){h=!0,i=a}finally{try{!g&&l.return&&l.return()}finally{if(h)throw i}}}return null!==e&&f.attr("id",e),f[0].outerHTML}},{key:"checkbox",value:function m(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,d=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,e=!!(3<arguments.length&&void 0!==arguments[3])&&arguments[3],f=$("<input type=\"checkbox\" />");if(f.attr("value",a),null!==b&&f.attr("id",b),"string"==typeof d)f.addClass(d);else{var g=!0,h=!1,i=void 0;try{for(var j,k,l=d[Symbol.iterator]();!(g=(j=l.next()).done);g=!0)k=j.value,f.addClass(k)}catch(a){h=!0,i=a}finally{try{!g&&l.return&&l.return()}finally{if(h)throw i}}}return null!==e&&f.attr("checked","checked"),f[0].outerHTML}},{key:"name",get:function a(){return this._client.GetName()}},{key:"bgcolors",set:function i(a){this._bg_colors=[];var b=!0,d=!1,e=void 0;try{for(var f,g,h=a[Symbol.iterator]();!(b=(f=h.next()).done);b=!0)g=f.value,this._bg_colors.push(g)}catch(a){d=!0,e=a}finally{try{!b&&h.return&&h.return()}finally{if(d)throw e}}}}]),a}();/* vim: set ts=2 sts=2 sw=2 et: */